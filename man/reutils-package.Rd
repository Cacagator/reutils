% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reutils-package.R
\docType{package}
\name{reutils-package}
\alias{reutils}
\alias{reutils-package}
\title{Talk to the NCBI EUtils}
\description{
An interface to NCBI databases such as PubMed, GenBank, or GEO
powered by the Entrez Programming Utilities (EUtils). The nine EUtils
provide programmatic access to the NCBI Entrez query and database
system for searching and retrieving biological data.
}
\section{Main functions}{

\itemize{
   \item \code{\link{esearch}}: Search and retrieve primary UIDs for use
   with \code{esummary}, \code{elink}, or \code{efetch}.
   \code{esearch} additionally returns term translations and optionally
   stores results for future use in the user's Web Environment.
    
   \item \code{\link{esummary}}: Retrieve document summaries from
   a list of primary UIDs (Provided as a character vector or as an
   \code{esearch} object).
    
   \item \code{\link{egquery}}: Provides Entrez database counts in XML
   for a single search term using a Global Query.
  
   \item \code{\link{einfo}}: Retrieve field names, term counts, last
   update, and available updates for each database.
        
   \item \code{\link{efetch}}: Retrieve data records in a specified
   format corresponding to a list of primary UIDs or from the user's Web
   Environment in the Entrez History server.
  
   \item \code{\link{elink}}: Returns a list of UIDs (and relevancy
   scores) from a target database that are related to a list of UIDs in
   the same database or in another Entrez database.
    
   \item \code{\link{epost}}: Uploads primary UIDs to the users's Web 
   Environment on the Entrez history server for subsequent use with
   \code{esummary}, \code{elink}, or \code{efetch}.
    
   \item \code{\link{espell}}: Provide spelling suggestions.
    
   \item \code{\link{ecitmatch}}: Retrieves PubMed IDs (PMIDs) that
   correspond to a set of input citation strings
    
   \item \code{\link{content}}: Extract the content of a request from the
   \code{\linkS4class{eutil}} object returned by any of the above functions.
}

}

\section{Package options}{


\pkg{reutils} uses three \code{\link{options}} to configure behaviour:

\itemize{
  \item \code{reutils.email}: NCBI requires that a user of their API provides an
     email address with a call to Entrez. If you are going to perform a lot
     of queries consider setting \code{reutils.email} to your email address in
     your .Rprofile file.
     
  \item \code{reutils.show.headlines}: By default \code{\linkS4class{efetch}}
     objects containing text data show only the first 12 lines. This is quite handy
     if you have downloaded a fairly large genome in Genbank file format. This
     can be changed by setting the global option \code{reutils.show.headlines} to
     another numeric value or \code{NULL}.

  \item \code{reutils.verbose.queries}: If you perform many queries interactively
     you might want to get messages announcing the queries you run. You can do so by setting
     the option \code{reutils.verbose.queries} to \code{TRUE}.
     
  \item \code{reutils.test.remote}: Unit tests that require online access to NCBI
     services are disabled by default, as they cannot be garanteed to be
     available/working under all circumstances. Set the option
     code{reutils.test.remote} to \code{TRUE} to run the full suite of tests.
}
   
}
\examples{
#
# combine esearch and efetch
#
# Download PubMed records that are indexed in MeSH for both 'Chlamydia' and 
# 'genome' and were published in 2013.
query <- "Chlamydia[mesh] and genome[mesh] and 2013[pdat]"

# Upload the PMIDs for this search to the History server
pmids <- esearch(query, "pubmed", usehistory = TRUE)
pmids

\dontrun{
# Fetch the records
articles <- efetch(pmids)

# Use XPath expressions with the #xmlValue() or #xmlAttr() methods to directly
# extract specific data from the XML records stored in the 'efetch' object.
titles <- articles$xmlValue("//ArticleTitle")
abstracts <- articles$xmlValue("//AbstractText")

#
# combine epost with esummary/efetch
#
# Download protein records corresponding to a list of GI numbers.
uid <- c("194680922", "50978626", "28558982", "9507199", "6678417")

# post the GI numbers to the Entrez history server
p <- epost(uid, "protein")

# retrieve docsums with esummary
docsum <- content(esummary(p, version = "1.0"), "parsed")
docsum

# download FASTAs as 'text' with efetch
prot <- efetch(p, retmode = "text", rettype = "fasta")
prot

# retrieve the content from the efetch object
fasta <- content(prot)
}
}
\author{
Gerhard SchÃ¶fl \email{gerhard.schofl@gmail.com}
}

